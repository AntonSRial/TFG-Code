
/**
@defgroup python_skeletontracking_console_img Skeleton Tracking on a local image - Python
\section Introduction
The Skeleton Tracking Python binding provides a convenient interface to perform the following tasks:
- Load the DNN model onto the target compute device (currently Intel CPU and Intel GPU are supported).
- Perform inference on the input image (currently only 3 channel 8-bit images of BGR format are supported)
- Draw the estimated keypoints of the skeleton over the input image.

\section Pre-requisites
- Currently this application supports an Intel CPU as well as GPU options with an 18-point Skeleton Tracking model. The model should match the TargetComputeDevice: fp32 for CPU and fp16 or fp32 for GPU
- The models need to be in the default models directory. The default models directory on Windows is %%LOCALAPPDATA%\\Cubemos\\SkeletonTracking\\models

\section Explanation
The python sample uses argparse to generate a command line interface. You can call "python estimate-keypoints --help" to see all available options.
The main method looks as follows:
\code{.py}
if __name__ == "__main__":
    #Parse command line arguments
    args = parser.parse_args()
    #Get the path of the native libraries and ressource files
    sdk_path = os.environ["CUBEMOS_SKEL_SDK"]
    if args.verbose:
        initialise_logging(sdk_path, CM_LogLevel.CM_LL_DEBUG, True)
    img = cv2.imread(args.image)
    #initialize the api with a valid license key in default_license_dir()
    api = Api(default_license_dir())
    model_path = os.path.join(
        sdk_path, "models", "skeleton-tracking", "fp32", "skeleton-tracking.cubemos"
    )
    api.load_model(CM_TargetComputeDevice.CM_CPU, model_path)
    #perform inference
    skeletons = api.estimate_keypoints(img, 192)
    render_result(skeletons, img, args.confidence_threshold)

    cv2.imwrite(args.output_image, img)
\endcode

In order to get started with using Skeleton Tracking on saved images and cubemos python wrapper, check the full source code of this sample provided in
$CUBEMOS_SKEL_SDK/samples/python/estimate-keypoints.py on linux and \%CUBEMOS_SKEL_SDK%\samples\python\estimate-keypoints.py on windows. \n
*/
